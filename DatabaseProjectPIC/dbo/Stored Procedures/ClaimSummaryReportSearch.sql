

CREATE  PROCEDURE [dbo].[ClaimSummaryReportSearch](
	@search_method		int,
	@start_date	        Datetime,
	@end_date		    Datetime,
	@loc_id				int,
	@lob				varchar(4),
	@SubscriberId		varchar(50),
	@DepSeq				varchar(5)
	)
	/*
	(
	@parameter1 int = 5,
	@parameter2 datatype OUTPUT
	)
	*/
AS
/******************************************************************************************************
-- LOCAL VARIABLES
*******************************************************************************************************/
DECLARE	@where_text			varchar(100),
	@where_field		varchar(50),
	--@start_date			datetime,
	--@end_date			datetime,
	@pend_code			varchar(4)
	
DECLARE @TEMP_TABLE TABLE
(
	CLAIM_ID		int,
	BATCH_CLAIM_ID	int,
	SUBSCRIBER_ID	varchar(30),
	DEPENDENT_SEQ	tinyint,
	FIRST_NAME		varchar(80),
	LAST_NAME		varchar(80),
	PROVIDER_NAME	varchar(80),
	DOS				datetime,
	DATE_RECEIVED	datetime,
	DATE_POSTED		datetime,
	REVIEW_STATUS   int,
	VOID_CODE		varchar(4),
	DATE_PAID		datetime,
	PENDING_CODE	varchar(4),
	PAYOR_ID		int,
	LINE_STATUS		varchar(4)                                                                                                        
)
			
	
DECLARE @RETURN_TABLE TABLE
(
	CLAIM_ID		int,
	BATCH_CLAIM_ID	int,
	SUBSCRIBER_ID	varchar(30),
	DEPENDENT_SEQ	tinyint,
	FIRST_NAME		varchar(80),
	LAST_NAME		varchar(80),
	PROVIDER_NAME	varchar(80),
	DOS				datetime,
	DATE_RECEIVED	datetime,
	DATE_POSTED		datetime,
	REVIEW_STATUS   int,
	DATE_PAID		datetime,
	PENDING_CODE	varchar(4),
	PAYOR_ID		int,
	LINE_STATUS		varchar(4)	                                                                                                          
)
	

--SET @start_date = CONVERT(datetime, @start_date_raw, 101)
--SET @end_date = CONVERT(datetime, @end_date_raw, 101)
SET @pend_code = 'DISP'

/*****************************************************************************************************
-- GET DATA ON ITEMS ALREADY THROUGH BATCH
-- SGARRETT:  06/29/2011 - CORRECT RPATINS JOIN BY ADDING JOIN TO RPATINS EFF/EXP DATES
******************************************************************************************************/
/* Date of Service */
if @search_method = 1
BEGIN
	INSERT INTO @TEMP_TABLE
	SELECT DISTINCT		HCFA_CLAIM.CLAIM_ID,
						HCFA_CLAIM.BATCH_CLAIM_ID,
						RPATACCT.SUBSCRIBER_ID,
						RPATACCT.DEPENDENT_SEQ,
						RPATACCT.FIRST_NAME,
						RPATACCT.LAST_NAME,
						PROVIDER.NAME AS PROVIDER_NAME,
						HCFA_CLAIM.DOS,
						HCFA_CLAIM.DATE_RECEIVED,
						HCFA_CLAIM.DATE_POSTED,
						HCFA_CLAIM.REVIEW_STATUS,
						HCFA_CLAIM.VOID_CODE,
						'',
						HCFA_DATES.DATE_CODE,
						'' as PAYOR_ID,
						--RPATINS.PAYOR_ID,
						(CASE 
						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('o','e','p') )>0 THEN 'o'
						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('c') )>0 THEN 'c'
						ELSE 'r' END
						) AS LINE_STATUS
	FROM				RPATACCT 
	INNER JOIN 			RPATINS ON RPATACCT.EFF_DATE = RPATINS.EFF_DATE AND RPATACCT.EXP_DATE = RPATINS.EXP_DATE 
	LEFT OUTER JOIN 	PAYOR_ID ON RPATINS.PAYOR_ID = PAYOR_ID.PAYOR_ID 
	RIGHT OUTER JOIN 	HCFA_CLAIM 
	LEFT OUTER JOIN 	VENDOR ON HCFA_CLAIM.VENDOR_ID  = VENDOR.ID ON RPATINS.ACCT_ID = HCFA_CLAIM.PAT_ID AND RPATACCT.ID = HCFA_CLAIM.PAT_ID 
	LEFT OUTER JOIN 	PROVIDER ON HCFA_CLAIM.PROVIDER_ID = PROVIDER.ID 
	LEFT OUTER JOIN 	HCFA_DATES ON HCFA_CLAIM.CLAIM_ID = HCFA_DATES.CLAIM_ID
	WHERE				(HCFA_CLAIM.DOS BETWEEN @start_date AND @end_date) 
	--AND					(LOCSVC_ID.CODE = 'TPX') 
	AND					(HCFA_DATES.DATE_CODE <> '454' OR HCFA_DATES.DATE_CODE IS NULL) 
	AND					(VENDOR.ID = @loc_id) 
	AND					(@start_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
	AND                 (@end_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
	AND					(PAYOR_ID.CODE = 'PLOB') 
	AND					(PAYOR_ID.VALUE = @lob) 
	AND                 (@SubscriberId = '' OR  RPATACCT.SUBSCRIBER_ID = @SubscriberId)
	AND					(@DepSeq = '' OR RPATACCT.DEPENDENT_SEQ  = @DepSeq )
	GOTO STEP2
END

/* Claim Received Date  */
if @search_method = 2
BEGIN
	INSERT INTO @TEMP_TABLE
	SELECT DISTINCT		HCFA_CLAIM.CLAIM_ID,
						HCFA_CLAIM.BATCH_CLAIM_ID,
						RPATACCT.SUBSCRIBER_ID,
						RPATACCT.DEPENDENT_SEQ,
						RPATACCT.FIRST_NAME,
						RPATACCT.LAST_NAME,
						PROVIDER.NAME AS PROVIDER_NAME,
						HCFA_CLAIM.DOS,
						HCFA_CLAIM.DATE_RECEIVED,
						HCFA_CLAIM.DATE_POSTED,
						HCFA_CLAIM.REVIEW_STATUS,
						HCFA_CLAIM.VOID_CODE,
						'',
						HCFA_DATES.DATE_CODE,
						'' as PAYOR_ID,
						--RPATINS.PAYOR_ID,
						(CASE 
						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('o','e','p') )>0 THEN 'o'
						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('c') )>0 THEN 'c'
						ELSE 'r' END
						) AS LINE_STATUS
	FROM				RPATACCT 
	INNER JOIN 			RPATINS ON RPATACCT.EFF_DATE = RPATINS.EFF_DATE AND RPATACCT.EXP_DATE = RPATINS.EXP_DATE 
	LEFT OUTER JOIN 	PAYOR_ID ON RPATINS.PAYOR_ID = PAYOR_ID.PAYOR_ID 
	RIGHT OUTER JOIN 	HCFA_CLAIM 
	LEFT OUTER JOIN 	VENDOR ON HCFA_CLAIM.VENDOR_ID  = VENDOR.ID  ON RPATINS.ACCT_ID = HCFA_CLAIM.PAT_ID AND RPATACCT.ID = HCFA_CLAIM.PAT_ID 
	LEFT OUTER JOIN 	PROVIDER ON HCFA_CLAIM.PROVIDER_ID = PROVIDER.ID 
	LEFT OUTER JOIN 	HCFA_DATES ON HCFA_CLAIM.CLAIM_ID = HCFA_DATES.CLAIM_ID
	WHERE				(HCFA_CLAIM.DATE_RECEIVED BETWEEN @start_date AND @end_date) 
	--AND					(LOCSVC_ID.CODE = 'TPX') 
	AND					(HCFA_DATES.DATE_CODE <> '454' OR HCFA_DATES.DATE_CODE IS NULL) 
	AND					(VENDOR.ID  = @loc_id) 
	AND					(@start_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
	AND                 (@end_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
	AND					(PAYOR_ID.CODE = 'PLOB') 
	AND					(PAYOR_ID.VALUE = @lob) 
	AND                 (@SubscriberId = '' OR RPATACCT.SUBSCRIBER_ID = @SubscriberId)
	AND					(@DepSeq = '' OR RPATACCT.DEPENDENT_SEQ = @DepSeq )
	GOTO STEP2
END

/* Claim Posted Date */
if @search_method = 3
BEGIN
	INSERT INTO @TEMP_TABLE
	SELECT DISTINCT		HCFA_CLAIM.CLAIM_ID,
						HCFA_CLAIM.BATCH_CLAIM_ID,
						RPATACCT.SUBSCRIBER_ID,
						RPATACCT.DEPENDENT_SEQ,
						RPATACCT.FIRST_NAME,
						RPATACCT.LAST_NAME,
						PROVIDER.NAME AS PROVIDER_NAME,
						HCFA_CLAIM.DOS,
						HCFA_CLAIM.DATE_RECEIVED,
						HCFA_CLAIM.DATE_POSTED,
						HCFA_CLAIM.REVIEW_STATUS,
						HCFA_CLAIM.VOID_CODE,
						'' ,
						HCFA_DATES.DATE_CODE,
						'' as PAYOR_ID,
						--RPATINS.PAYOR_ID,
						(CASE 
						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('o','e','p') )>0 THEN 'o'
						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('c') )>0 THEN 'c'
						ELSE 'r' END
						) AS LINE_STATUS
	FROM				RPATACCT 
	INNER JOIN 			RPATINS ON RPATACCT.EFF_DATE = RPATINS.EFF_DATE AND RPATACCT.EXP_DATE = RPATINS.EXP_DATE 
	LEFT OUTER JOIN 	PAYOR_ID ON RPATINS.PAYOR_ID = PAYOR_ID.PAYOR_ID 
	RIGHT OUTER JOIN 	HCFA_CLAIM 
	LEFT OUTER JOIN 	VENDOR ON HCFA_CLAIM.VENDOR_ID  = VENDOR.ID ON RPATINS.ACCT_ID = HCFA_CLAIM.PAT_ID AND RPATACCT.ID = HCFA_CLAIM.PAT_ID 
	LEFT OUTER JOIN 	PROVIDER ON HCFA_CLAIM.PROVIDER_ID = PROVIDER.ID 
	LEFT OUTER JOIN 	HCFA_DATES ON HCFA_CLAIM.CLAIM_ID = HCFA_DATES.CLAIM_ID
	WHERE				(HCFA_CLAIM.DATE_POSTED BETWEEN @start_date AND @end_date) 
	--AND					(LOCSVC_ID.CODE = 'TPX') 
	AND					(HCFA_DATES.DATE_CODE <> '454' OR HCFA_DATES.DATE_CODE IS NULL) 
	AND					(VENDOR.ID = @loc_id) 
	AND					(@start_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
	AND                 (@end_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
	AND					(PAYOR_ID.CODE = 'PLOB') 
	AND					(PAYOR_ID.VALUE = @lob) 
	AND                 (@SubscriberId = '' OR RPATACCT.SUBSCRIBER_ID = @SubscriberId)
	AND					(@DepSeq = '' OR RPATACCT.DEPENDENT_SEQ = @DepSeq )
	GOTO STEP2
END

/* Claim Paid Date */
if @search_method = 4
BEGIN
	INSERT INTO @TEMP_TABLE
	SELECT DISTINCT		HCFA_CLAIM.CLAIM_ID,
						HCFA_CLAIM.BATCH_CLAIM_ID,
						RPATACCT.SUBSCRIBER_ID,
						RPATACCT.DEPENDENT_SEQ,
						RPATACCT.FIRST_NAME,
						RPATACCT.LAST_NAME,
						PROVIDER.NAME AS PROVIDER_NAME,
						HCFA_CLAIM.DOS,
						HCFA_CLAIM.DATE_RECEIVED,
						HCFA_CLAIM.DATE_POSTED,
						HCFA_CLAIM.REVIEW_STATUS,
						HCFA_CLAIM.VOID_CODE,
						'' ,
						HCFA_DATES.DATE_CODE,
						'' as PAYOR_ID,
						--RPATINS.PAYOR_ID,
						(CASE 
						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('o','e','p') )>0 THEN 'o'
						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('c') )>0 THEN 'c'
						ELSE 'r' END
						) AS LINE_STATUS
	FROM				RPATACCT 
	INNER JOIN 			RPATINS ON RPATACCT.EFF_DATE = RPATINS.EFF_DATE AND RPATACCT.EXP_DATE = RPATINS.EXP_DATE 
	LEFT OUTER JOIN 	PAYOR_ID ON RPATINS.PAYOR_ID = PAYOR_ID.PAYOR_ID 
	RIGHT OUTER JOIN 	HCFA_CLAIM 
	LEFT OUTER JOIN 	VENDOR ON HCFA_CLAIM.VENDOR_ID  = VENDOR.ID ON RPATINS.ACCT_ID = HCFA_CLAIM.PAT_ID AND RPATACCT.ID = HCFA_CLAIM.PAT_ID 
	LEFT OUTER JOIN 	PROVIDER ON HCFA_CLAIM.PROVIDER_ID = PROVIDER.ID 
	LEFT OUTER JOIN 	HCFA_DATES ON HCFA_CLAIM.CLAIM_ID = HCFA_DATES.CLAIM_ID
	WHERE				(HCFA_CLAIM.DATE_PROCESSED BETWEEN @start_date AND @end_date)
	--AND					(LOCSVC_ID.CODE = 'TPX') 
	AND					(HCFA_DATES.DATE_CODE <> '454' OR HCFA_DATES.DATE_CODE IS NULL) 
	AND					(VENDOR.ID = @loc_id) 
	AND				(@start_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
	AND               (@end_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
	AND					(PAYOR_ID.CODE = 'PLOB') 
	AND					(PAYOR_ID.VALUE = @lob) 
	AND                 (@SubscriberId = '' OR RPATACCT.SUBSCRIBER_ID = @SubscriberId)
	AND					(@DepSeq = '' OR RPATACCT.DEPENDENT_SEQ = @DepSeq )
	GOTO STEP2
END


/*****************************************************************************************************
-- GET DATA ON ITEMS THAT HAVE NOT MADE IT THROUGH YET (PENDING ITEMS)
--
******************************************************************************************************/
STEP2:

Update @TEMP_TABLE
Set DATE_PAID = (select Max(CLM_PMNT_DTL.CHECK_DATE) from CLM_PMNT_DTL Where T.CLAIM_ID = CLM_PMNT_DTL.CLAIM_ID )
From @TEMP_TABLE T 
--/* Date of Service */
--if @search_method = 1
--BEGIN
--	INSERT INTO @TEMP_TABLE
--	SELECT DISTINCT		BATCH_HCFA_CLAIM.CLAIM_ID,
--						BATCH_HCFA_CLAIM.BATCH_CLAIM_ID,
--						RPATACCT.SUBSCRIBER_ID,
--						RPATACCT.DEPENDENT_SEQ,
--						RPATACCT.FIRST_NAME,
--						RPATACCT.LAST_NAME,
--						PROVIDER.NAME AS PROVIDER_NAME,
--						BATCH_HCFA_CLAIM.DOS,
--						BATCH_HCFA_CLAIM.DATE_RECEIVED,
--						BATCH_HCFA_CLAIM.DATE_POSTED,
--						BATCH_HCFA_CLAIM.REVIEW_STATUS,
--						BATCH_HCFA_CLAIM.VOID_CODE,
--						BATCH_HCFA_CLAIM.DATE_PROCESSED,
--						HCFA_DATES.DATE_CODE,
--						RPATINS.PAYOR_ID,
--						(CASE 
--						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=BATCH_HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('o','e','p') )>0 THEN 'o'
--						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=BATCH_HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('c') )>0 THEN 'c'
--						ELSE 'r' END
--						) AS LINE_STATUS
--	FROM				RPATACCT 
--	INNER JOIN 			RPATINS ON RPATACCT.EFF_DATE = RPATINS.EFF_DATE AND RPATACCT.EXP_DATE = RPATINS.EXP_DATE 
--	LEFT OUTER JOIN 	PAYOR_ID ON RPATINS.PAYOR_ID = PAYOR_ID.PAYOR_ID 
--	RIGHT OUTER JOIN 	BATCH_HCFA_CLAIM 
--	LEFT OUTER JOIN 	VENDOR ON BATCH_HCFA_CLAIM.VENDOR_ID  = VENDOR.ID  ON RPATINS.ACCT_ID = BATCH_HCFA_CLAIM.PAT_ID AND RPATACCT.ID = BATCH_HCFA_CLAIM.PAT_ID 
--	LEFT OUTER JOIN 	PROVIDER ON BATCH_HCFA_CLAIM.PROVIDER_ID = PROVIDER.ID 
--	LEFT OUTER JOIN 	HCFA_DATES ON BATCH_HCFA_CLAIM.CLAIM_ID = HCFA_DATES.CLAIM_ID
--	WHERE				(BATCH_HCFA_CLAIM.DOS BETWEEN @start_date AND @end_date)
--	--AND					(LOCSVC_ID.CODE = 'TPX') 
--	AND					(HCFA_DATES.DATE_CODE <> '454' OR HCFA_DATES.DATE_CODE IS NULL) 
--	AND					(VENDOR.ID = @loc_id) 
--	AND					(@start_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
--	AND                 (@end_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
--	AND					(PAYOR_ID.CODE = 'PLOB') 
--	AND					(PAYOR_ID.VALUE = @lob) 
--	AND                 (RPATACCT.SUBSCRIBER_ID = @SubscriberId)
--	AND					(RPATACCT.DEPENDENT_SEQ = @DepSeq )
--	GOTO CLEANDATA
--END

--/* Claim Received Date */
--if @search_method = 2
--BEGIN
--	INSERT INTO @TEMP_TABLE
--	SELECT DISTINCT		BATCH_HCFA_CLAIM.CLAIM_ID,
--						BATCH_HCFA_CLAIM.BATCH_CLAIM_ID,
--						RPATACCT.SUBSCRIBER_ID,
--						RPATACCT.DEPENDENT_SEQ,
--						RPATACCT.FIRST_NAME,
--						RPATACCT.LAST_NAME,
--						PROVIDER.NAME AS PROVIDER_NAME,
--						BATCH_HCFA_CLAIM.DOS,
--						BATCH_HCFA_CLAIM.DATE_RECEIVED,
--						BATCH_HCFA_CLAIM.DATE_POSTED,
--						BATCH_HCFA_CLAIM.REVIEW_STATUS,
--						BATCH_HCFA_CLAIM.VOID_CODE,
--						BATCH_HCFA_CLAIM.DATE_PROCESSED,
--						HCFA_DATES.DATE_CODE,
--						RPATINS.PAYOR_ID,
--						(CASE 
--						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=BATCH_HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('o','e','p') )>0 THEN 'o'
--						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=BATCH_HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('c') )>0 THEN 'c'
--						ELSE 'r' END
--						) AS LINE_STATUS
--	FROM				RPATACCT 
--	INNER JOIN 			RPATINS ON RPATACCT.EFF_DATE = RPATINS.EFF_DATE AND RPATACCT.EXP_DATE = RPATINS.EXP_DATE 
--	LEFT OUTER JOIN 	PAYOR_ID ON RPATINS.PAYOR_ID = PAYOR_ID.PAYOR_ID 
--	RIGHT OUTER JOIN 	BATCH_HCFA_CLAIM 
--	LEFT OUTER JOIN 	VENDOR ON BATCH_HCFA_CLAIM.VENDOR_ID  = VENDOR.ID ON RPATINS.ACCT_ID = BATCH_HCFA_CLAIM.PAT_ID AND RPATACCT.ID = BATCH_HCFA_CLAIM.PAT_ID 
--	LEFT OUTER JOIN 	PROVIDER ON BATCH_HCFA_CLAIM.PROVIDER_ID = PROVIDER.ID 
--	LEFT OUTER JOIN 	HCFA_DATES ON BATCH_HCFA_CLAIM.CLAIM_ID = HCFA_DATES.CLAIM_ID
--	WHERE				(BATCH_HCFA_CLAIM.DATE_RECEIVED BETWEEN @start_date AND @end_date)
--	--AND					(LOCSVC_ID.CODE = 'TPX') 
--	AND					(HCFA_DATES.DATE_CODE <> '454' OR HCFA_DATES.DATE_CODE IS NULL) 
--	AND					(VENDOR.ID = @loc_id) 
--	AND					(@start_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
--	AND                 (@end_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
--	AND					(PAYOR_ID.CODE = 'PLOB') 
--	AND					(PAYOR_ID.VALUE = @lob) 
--	AND                 (RPATACCT.SUBSCRIBER_ID = @SubscriberId)
--	AND					(RPATACCT.DEPENDENT_SEQ = @DepSeq )
--	GOTO CLEANDATA

--END

--/* Date of Service */
--if @search_method = 3
--BEGIN
--	INSERT INTO @TEMP_TABLE
--	SELECT DISTINCT		BATCH_HCFA_CLAIM.CLAIM_ID,
--						BATCH_HCFA_CLAIM.BATCH_CLAIM_ID,
--						RPATACCT.SUBSCRIBER_ID,
--						RPATACCT.DEPENDENT_SEQ,
--						RPATACCT.FIRST_NAME,
--						RPATACCT.LAST_NAME,
--						PROVIDER.NAME AS PROVIDER_NAME,
--						BATCH_HCFA_CLAIM.DOS,
--						BATCH_HCFA_CLAIM.DATE_RECEIVED,
--						BATCH_HCFA_CLAIM.DATE_POSTED,
--						BATCH_HCFA_CLAIM.REVIEW_STATUS,
--						BATCH_HCFA_CLAIM.VOID_CODE,
--						BATCH_HCFA_CLAIM.DATE_PROCESSED,
--						HCFA_DATES.DATE_CODE,
--						RPATINS.PAYOR_ID,
--						(CASE 
--						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=BATCH_HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('o','e','p') )>0 THEN 'o'
--						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=BATCH_HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('c') )>0 THEN 'c'
--						ELSE 'r' END
--						) AS LINE_STATUS
--	FROM				RPATACCT 
--	INNER JOIN 			RPATINS ON RPATACCT.EFF_DATE = RPATINS.EFF_DATE AND RPATACCT.EXP_DATE = RPATINS.EXP_DATE 
--	LEFT OUTER JOIN 	PAYOR_ID ON RPATINS.PAYOR_ID = PAYOR_ID.PAYOR_ID 
--	RIGHT OUTER JOIN 	BATCH_HCFA_CLAIM 
--	LEFT OUTER JOIN 	VENDOR ON BATCH_HCFA_CLAIM.VENDOR_ID  = VENDOR.ID ON RPATINS.ACCT_ID = BATCH_HCFA_CLAIM.PAT_ID AND RPATACCT.ID = BATCH_HCFA_CLAIM.PAT_ID 
--	LEFT OUTER JOIN 	PROVIDER ON BATCH_HCFA_CLAIM.PROVIDER_ID = PROVIDER.ID 
--	LEFT OUTER JOIN 	HCFA_DATES ON BATCH_HCFA_CLAIM.CLAIM_ID = HCFA_DATES.CLAIM_ID
--	WHERE				(BATCH_HCFA_CLAIM.DATE_POSTED BETWEEN @start_date AND @end_date)
--	--AND					(LOCSVC_ID.CODE = 'TPX') 
--	AND					(HCFA_DATES.DATE_CODE <> '454' OR HCFA_DATES.DATE_CODE IS NULL) 
--	AND					(VENDOR.ID  = @loc_id) 
--	AND					(@start_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
--	AND                 (@end_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
--	AND					(PAYOR_ID.CODE = 'PLOB') 
--	AND					(PAYOR_ID.VALUE = @lob) 
--	AND                 (RPATACCT.SUBSCRIBER_ID = @SubscriberId)
--	AND					(RPATACCT.DEPENDENT_SEQ = @DepSeq )
--	GOTO CLEANDATA
--END

--/* Claim Paid Date */
--if @search_method = 4
--BEGIN
--	INSERT INTO @TEMP_TABLE
--	SELECT DISTINCT		BATCH_HCFA_CLAIM.CLAIM_ID,
--						BATCH_HCFA_CLAIM.BATCH_CLAIM_ID,
--						RPATACCT.SUBSCRIBER_ID,
--						RPATACCT.DEPENDENT_SEQ,
--						RPATACCT.FIRST_NAME,
--						RPATACCT.LAST_NAME,
--						PROVIDER.NAME AS PROVIDER_NAME,
--						BATCH_HCFA_CLAIM.DOS,
--						BATCH_HCFA_CLAIM.DATE_RECEIVED,
--						BATCH_HCFA_CLAIM.DATE_POSTED,
--						BATCH_HCFA_CLAIM.REVIEW_STATUS,
--						BATCH_HCFA_CLAIM.VOID_CODE,
--						BATCH_HCFA_CLAIM.DATE_PROCESSED,
--						HCFA_DATES.DATE_CODE,
--						RPATINS.PAYOR_ID,
--						(CASE 
--						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=BATCH_HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('o','e','p') )>0 THEN 'o'
--						WHEN (SELECT COUNT(*) FROM HCFA_LINE WHERE HCFA_LINE.CLAIM_ID=BATCH_HCFA_CLAIM.CLAIM_ID AND HCFA_LINE.LINE_STATUS IN ('c') )>0 THEN 'c'
--						ELSE 'r' END
--						) AS LINE_STATUS
--	FROM				RPATACCT 
--	INNER JOIN 			RPATINS ON RPATACCT.EFF_DATE = RPATINS.EFF_DATE AND RPATACCT.EXP_DATE = RPATINS.EXP_DATE 
--	LEFT OUTER JOIN 	PAYOR_ID ON RPATINS.PAYOR_ID = PAYOR_ID.PAYOR_ID 
--	RIGHT OUTER JOIN 	BATCH_HCFA_CLAIM 
--	LEFT OUTER JOIN 	VENDOR ON BATCH_HCFA_CLAIM.VENDOR_ID  = VENDOR.ID ON RPATINS.ACCT_ID = BATCH_HCFA_CLAIM.PAT_ID AND RPATACCT.ID = BATCH_HCFA_CLAIM.PAT_ID 
--	LEFT OUTER JOIN 	PROVIDER ON BATCH_HCFA_CLAIM.PROVIDER_ID = PROVIDER.ID 
--	LEFT OUTER JOIN 	HCFA_DATES ON BATCH_HCFA_CLAIM.CLAIM_ID = HCFA_DATES.CLAIM_ID
--	WHERE				(BATCH_HCFA_CLAIM.DATE_PROCESSED BETWEEN @start_date AND @end_date)
--	--AND					(LOCSVC_ID.CODE = 'TPX') 
--	AND					(HCFA_DATES.DATE_CODE <> '454' OR HCFA_DATES.DATE_CODE IS NULL) 
--	AND					(VENDOR.ID = @loc_id) 
--	AND					(@start_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
--	AND                 (@end_date BETWEEN RPATINS.EFF_DATE AND RPATINS.EXP_DATE) 
--	AND					(PAYOR_ID.CODE = 'PLOB') 
--	AND					(PAYOR_ID.VALUE = @lob) 
--	AND                 (RPATACCT.SUBSCRIBER_ID = @SubscriberId)
--	AND					(RPATACCT.DEPENDENT_SEQ = @DepSeq )
--	GOTO CLEANDATA
--END



CLEANDATA:
BEGIN
	/* Insert all Clean (Status = 0) Records to return table */
	INSERT INTO @RETURN_TABLE
	SELECT DISTINCT			CLAIM_ID,
							BATCH_CLAIM_ID,
							SUBSCRIBER_ID,
							DEPENDENT_SEQ,
							FIRST_NAME,
							LAST_NAME,
							PROVIDER_NAME,
							DOS,
							DATE_RECEIVED,
							DATE_POSTED,
							REVIEW_STATUS,
							DATE_PAID,
							PENDING_CODE,
							PAYOR_ID,
							LINE_STATUS
	FROM					@TEMP_TABLE
	WHERE					REVIEW_STATUS = 0
	
	/* Delete all Clean (Status = 0) Recrods from temp table */
	DELETE FROM @TEMP_TABLE WHERE REVIEW_STATUS = 0
	
	/* Insert all Voided (Void_Code = null/Status = 3) Records to return table, and change STATUS to 1 */
	INSERT INTO @RETURN_TABLE
	SELECT DISTINCT			CLAIM_ID,
							BATCH_CLAIM_ID,
							SUBSCRIBER_ID,
							DEPENDENT_SEQ,
							FIRST_NAME,
							LAST_NAME,
							PROVIDER_NAME,
							DOS,
							DATE_RECEIVED,
							DATE_POSTED,
							REVIEW_STATUS =
								CASE REVIEW_STATUS
									WHEN '3' THEN '1'
								END,
							DATE_PAID,
							PENDING_CODE,
							PAYOR_ID,
							LINE_STATUS
	FROM					@TEMP_TABLE
	WHERE					REVIEW_STATUS = 3
	AND						VOID_CODE IS NOT NULL
	
	/* Delete All VOID records */
	DELETE FROM @TEMP_TABLE WHERE REVIEW_STATUS = 3 AND VOID_CODE IS NOT NULL
	
	
	/* add the rest, will do more filtering here as needed */
	INSERT INTO @RETURN_TABLE
	SELECT					CLAIM_ID,
							BATCH_CLAIM_ID,
							SUBSCRIBER_ID,
							DEPENDENT_SEQ,
							FIRST_NAME,
							LAST_NAME,
							PROVIDER_NAME,
							DOS,
							DATE_RECEIVED,
							DATE_POSTED,
							REVIEW_STATUS,
							DATE_PAID,
							PENDING_CODE,
							PAYOR_ID,
							LINE_STATUS
	FROM					@TEMP_TABLE
	
	GOTO THEEXIT
END
	
THEEXIT:

if @search_method = 1
	SELECT * FROM @RETURN_TABLE ORDER BY DOS DESC   
	
if @search_method = 2
	SELECT * FROM @RETURN_TABLE ORDER BY DATE_RECEIVED DESC   
	
if @search_method = 3
	SELECT * FROM @RETURN_TABLE ORDER BY DATE_POSTED DESC   

if @search_method = 4
	SELECT * FROM @RETURN_TABLE ORDER BY DATE_PAID DESC




